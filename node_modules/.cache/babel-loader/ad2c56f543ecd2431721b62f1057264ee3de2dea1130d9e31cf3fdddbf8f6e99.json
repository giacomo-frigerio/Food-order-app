{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nfunction useHttp() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const httpRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : \"\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) throw new Error(\"Request failed\");\n      const data = await response.json();\n      applyData(data);\n    } catch {\n      setError(\"Couldn't fetch data\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    httpRequest,\n    isLoading,\n    error\n  };\n}\n_s(useHttp, \"+dXvJhD9DXJxVe+ihLRbREzsEnA=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","isLoading","setIsLoading","error","setError","httpRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json"],"sources":["C:/Users/giacomo/Downloads/complete_food_order_app/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nfunction useHttp() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const httpRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : \"\",\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Request failed\");\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch {\r\n      setError(\"Couldn't fetch data\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return { httpRequest, isLoading, error };\r\n}\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMM,WAAW,GAAGP,WAAW,CAAC,OAAOQ,aAAa,EAAEC,SAAS,KAAK;IAClEL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAG,EAAE;QAC9CC,MAAM,EAAEL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEN,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACM,OAAO,GAAG,EAAE;QAC3DC,IAAI,EAAEP,aAAa,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MAEnD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAClCZ,SAAS,CAACW,IAAI,CAAC;IACjB,CAAC,CAAC,MAAM;MACNd,QAAQ,CAAC,qBAAqB,CAAC;IACjC;IAEAF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEG,WAAW;IAAEJ,SAAS;IAAEE;EAAM,CAAC;AAC1C;AAAC,GA3BQH,OAAO;AA6BhB,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}